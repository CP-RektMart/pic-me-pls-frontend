/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/api/v1/auth/login': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Login
     * @description Login
     */
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      /** @description request request */
      requestBody: {
        content: {
          'application/json': components['schemas']['dto.LoginRequest']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_LoginResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/auth/logout': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Logout
     * @description Logout
     */
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description No Content */
        204: {
          headers: {
            [name: string]: unknown
          }
          content?: never
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/auth/refresh-token': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Refresh Token
     * @description Refresh Token
     */
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      /** @description request request */
      requestBody: {
        content: {
          'application/json': components['schemas']['dto.RefreshTokenRequest']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_TokenResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/auth/register': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * register
     * @description register
     */
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      /** @description request request */
      requestBody: {
        content: {
          'application/json': components['schemas']['dto.RegisterRequest']
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_RegisterResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/me': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get me
     * @description Get me
     */
    get: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_UserResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Update me
     * @description Update user's profile
     */
    patch: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      /** @description Bank Branch */
      requestBody?: {
        content: {
          'application/x-www-form-urlencoded': string
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_UserResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    trace?: never
  }
  '/api/v1/photographer/citizen-card': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get Citizen Card
     * @description Get Photographer Citizen Card
     */
    get: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      requestBody?: never
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_CitizenCardResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/api/v1/photographer/reverify': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    /**
     * Reverify Citizen Card
     * @description Reverify Photographer Citizen Card
     */
    patch: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      /** @description Expire Date */
      requestBody: {
        content: {
          'application/x-www-form-urlencoded': string
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_CitizenCardResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    trace?: never
  }
  '/api/v1/photographer/verify': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Verify Citizen Card
     * @description Verify Photographer Citizen Card
     */
    post: {
      parameters: {
        query?: never
        header?: never
        path?: never
        cookie?: never
      }
      /** @description form data */
      requestBody: {
        content: {
          'multipart/form-data': Record<string, never>
        }
      }
      responses: {
        /** @description OK */
        200: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpResponse-dto_CitizenCardResponse']
          }
        }
        /** @description Bad Request */
        400: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
        /** @description Internal Server Error */
        500: {
          headers: {
            [name: string]: unknown
          }
          content: {
            'application/json': components['schemas']['dto.HttpError']
          }
        }
      }
    }
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    'dto.CitizenCardResponse': {
      citizenId?: string
      expireDate?: string
      laserId?: string
      picture?: string
    }
    'dto.HttpError': {
      error?: string
    }
    'dto.HttpResponse-dto_CitizenCardResponse': {
      result?: components['schemas']['dto.CitizenCardResponse']
    }
    'dto.HttpResponse-dto_LoginResponse': {
      result?: components['schemas']['dto.LoginResponse']
    }
    'dto.HttpResponse-dto_RegisterResponse': {
      result?: components['schemas']['dto.RegisterResponse']
    }
    'dto.HttpResponse-dto_TokenResponse': {
      result?: components['schemas']['dto.TokenResponse']
    }
    'dto.HttpResponse-dto_UserResponse': {
      result?: components['schemas']['dto.UserResponse']
    }
    'dto.LoginRequest': {
      idToken: string
      /** @description GOOGLE */
      provider: string
    }
    'dto.LoginResponse': {
      accessToken?: string
      exp?: number
      refreshToken?: string
      user?: components['schemas']['dto.UserResponse']
    }
    'dto.RefreshTokenRequest': {
      refreshToken: string
    }
    'dto.RegisterRequest': {
      idToken: string
      /** @description GOOGLE */
      provider: string
      /** @description CUSTOMER, PHOTOGRAPHER, ADMIN */
      role: string
    }
    'dto.RegisterResponse': {
      accessToken?: string
      exp?: number
      refreshToken?: string
      user?: components['schemas']['dto.UserResponse']
    }
    'dto.TokenResponse': {
      accessToken?: string
      exp?: number
      refreshToken?: string
    }
    'dto.UserResponse': {
      accountNo?: string
      bank?: string
      bankBranch?: string
      email?: string
      facebook?: string
      id?: number
      instagram?: string
      name?: string
      phoneNumber?: string
      profilePictureUrl?: string
      role?: string
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export type operations = Record<string, never>
